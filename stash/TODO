--------------------------------------------------------------------------------

S C O P  S C O P E :

THERE ARE A LOT OF LEAKS RIGHT NOW BECAUSE YOU HAVENT CLEANED UP THE ENV

* handles (TODO)
* showFPS (TODO)

CLEANUP (TODO) delete all gl objects and scop memory
draw.c -> very nasty

SELECTION (TODO)
* stop auto-rotate when editing rotation of object (TODO)
* move light

HANDLES
* scene axes and grid, objects local/world axes
* small coordinate system in the bottom right to indicate world axes

* input :
- [Z] -> activate/deactivate auto-rotate (DONE)
- [X] -> switch world/local space (DONE)
- [C] -> switch face colors (grayscale/rgb) (DONE)
- [SPACE] -> default shader FADE (DONE)
- [S] -> switch skybox (DONE)
- [T] -> switch texture (DONE)
- [W/E/R] -> move/rotate/scale (DONE)
- [ESC] -> quit (DONE)
- selection ([left mouse], [shift...) (TODO)
N - blender numpad ([1/ctrl1] = front/back view, [3/ctrl3]..., [5] ortho/perspective)

clean everything up.
check leaks !
norminette on all.
have a good stack of obj and mtl files for the corrector.

remove .vscode before finishing the project
remove display.c
remove stash folder content except TODO
remove unused libft functions/files. from libft.h TOO
remove unused libmath functions/files. from libmath.h TOO

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

O U T  O F  S C O P E :

SERIALIZATION !

IMPORTANT : algo to sort the vertices and indices
IMPORTANT : Drawcall analysis (slider shows each primitive being renderered)

* import button for .obj files with import flags/toggles -> texture, material,
    animation, rigging, normals etc.

pick_fbo => use a tiny frustrum that surrounds the mouse (ray)

* ability to lock on a gameobject (camera rotates around it)
* object basic info when hovering over it.
* error logger (console log "pops" up when there is a debug/error)
-> it's like a sidebar on top of the folder window, that slides up
    (you can lock it to keep it docked, small notifications as exclamation mark)

* float field and toggle for fps capping (e.g. toggle[/] and [60fps])
* vector / math libraries in c++ with operators lh +(rh) lh =(rh)
* 3d textures and tetrahedrons eventually

gameObject = {
    rendering properties,
    physics properties,
    audio properties,
    behaviour(s),
    matter properties,
    etc.
};

--------------------------------------------------------------------------------
